// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition"

// DATE "01/08/2017 20:22:44"

// 
// Device: Altera EP2C70F896C6 Package FBGA896
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module \lab2-async  (
	oledr,
	key);
output 	[3:0] oledr;
input 	[0:0] key;

// Design Ports Information
// oledr[3]	=>  Location: PIN_H1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// oledr[2]	=>  Location: PIN_G2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// oledr[1]	=>  Location: PIN_F2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// oledr[0]	=>  Location: PIN_G1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
// key[0]	=>  Location: PIN_T2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \key[0]~clkctrl_outclk ;
wire \inst28~0_combout ;
wire \inst~regout ;
wire \inst13~0_combout ;
wire \inst2~regout ;
wire \inst3~0_combout ;
wire \inst3~regout ;
wire \inst1~0_combout ;
wire \inst1~regout ;
wire [0:0] \key~combout ;


// Location: PIN_T2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
cycloneii_io \key[0]~I (
	.datain(gnd),
	.oe(gnd),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(\key~combout [0]),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(key[0]));
// synopsys translate_off
defparam \key[0]~I .input_async_reset = "none";
defparam \key[0]~I .input_power_up = "low";
defparam \key[0]~I .input_register_mode = "none";
defparam \key[0]~I .input_sync_reset = "none";
defparam \key[0]~I .oe_async_reset = "none";
defparam \key[0]~I .oe_power_up = "low";
defparam \key[0]~I .oe_register_mode = "none";
defparam \key[0]~I .oe_sync_reset = "none";
defparam \key[0]~I .operation_mode = "input";
defparam \key[0]~I .output_async_reset = "none";
defparam \key[0]~I .output_power_up = "low";
defparam \key[0]~I .output_register_mode = "none";
defparam \key[0]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: CLKCTRL_G3
cycloneii_clkctrl \key[0]~clkctrl (
	.ena(vcc),
	.inclk({gnd,gnd,gnd,\key~combout [0]}),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\key[0]~clkctrl_outclk ));
// synopsys translate_off
defparam \key[0]~clkctrl .clock_type = "global clock";
defparam \key[0]~clkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X1_Y39_N14
cycloneii_lcell_comb \inst28~0 (
// Equation(s):
// \inst28~0_combout  = (!\inst~regout  & ((!\inst3~regout ) # (!\inst2~regout )))

	.dataa(\inst2~regout ),
	.datab(vcc),
	.datac(\inst~regout ),
	.datad(\inst3~regout ),
	.cin(gnd),
	.combout(\inst28~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst28~0 .lut_mask = 16'h050F;
defparam \inst28~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X1_Y39_N15
cycloneii_lcell_ff inst(
	.clk(\key[0]~clkctrl_outclk ),
	.datain(\inst28~0_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\inst~regout ));

// Location: LCCOMB_X1_Y39_N12
cycloneii_lcell_comb \inst13~0 (
// Equation(s):
// \inst13~0_combout  = (\inst1~regout  & (\inst~regout  $ ((\inst2~regout )))) # (!\inst1~regout  & (((\inst2~regout  & !\inst3~regout ))))

	.dataa(\inst1~regout ),
	.datab(\inst~regout ),
	.datac(\inst2~regout ),
	.datad(\inst3~regout ),
	.cin(gnd),
	.combout(\inst13~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst13~0 .lut_mask = 16'h2878;
defparam \inst13~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X1_Y39_N13
cycloneii_lcell_ff inst2(
	.clk(\key[0]~clkctrl_outclk ),
	.datain(\inst13~0_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\inst2~regout ));

// Location: LCCOMB_X1_Y39_N28
cycloneii_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = !\inst3~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\inst3~regout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3~0 .lut_mask = 16'h0F0F;
defparam \inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X1_Y39_N29
cycloneii_lcell_ff inst3(
	.clk(!\inst2~regout ),
	.datain(\inst3~0_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\inst3~regout ));

// Location: LCCOMB_X2_Y39_N16
cycloneii_lcell_comb \inst1~0 (
// Equation(s):
// \inst1~0_combout  = !\inst1~regout 

	.dataa(vcc),
	.datab(vcc),
	.datac(\inst1~regout ),
	.datad(vcc),
	.cin(gnd),
	.combout(\inst1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst1~0 .lut_mask = 16'h0F0F;
defparam \inst1~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCFF_X2_Y39_N17
cycloneii_lcell_ff inst1(
	.clk(!\inst~regout ),
	.datain(\inst1~0_combout ),
	.sdata(gnd),
	.aclr(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.regout(\inst1~regout ));

// Location: PIN_H1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \oledr[3]~I (
	.datain(\inst3~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(oledr[3]));
// synopsys translate_off
defparam \oledr[3]~I .input_async_reset = "none";
defparam \oledr[3]~I .input_power_up = "low";
defparam \oledr[3]~I .input_register_mode = "none";
defparam \oledr[3]~I .input_sync_reset = "none";
defparam \oledr[3]~I .oe_async_reset = "none";
defparam \oledr[3]~I .oe_power_up = "low";
defparam \oledr[3]~I .oe_register_mode = "none";
defparam \oledr[3]~I .oe_sync_reset = "none";
defparam \oledr[3]~I .operation_mode = "output";
defparam \oledr[3]~I .output_async_reset = "none";
defparam \oledr[3]~I .output_power_up = "low";
defparam \oledr[3]~I .output_register_mode = "none";
defparam \oledr[3]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_G2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \oledr[2]~I (
	.datain(\inst2~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(oledr[2]));
// synopsys translate_off
defparam \oledr[2]~I .input_async_reset = "none";
defparam \oledr[2]~I .input_power_up = "low";
defparam \oledr[2]~I .input_register_mode = "none";
defparam \oledr[2]~I .input_sync_reset = "none";
defparam \oledr[2]~I .oe_async_reset = "none";
defparam \oledr[2]~I .oe_power_up = "low";
defparam \oledr[2]~I .oe_register_mode = "none";
defparam \oledr[2]~I .oe_sync_reset = "none";
defparam \oledr[2]~I .operation_mode = "output";
defparam \oledr[2]~I .output_async_reset = "none";
defparam \oledr[2]~I .output_power_up = "low";
defparam \oledr[2]~I .output_register_mode = "none";
defparam \oledr[2]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_F2,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \oledr[1]~I (
	.datain(\inst1~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(oledr[1]));
// synopsys translate_off
defparam \oledr[1]~I .input_async_reset = "none";
defparam \oledr[1]~I .input_power_up = "low";
defparam \oledr[1]~I .input_register_mode = "none";
defparam \oledr[1]~I .input_sync_reset = "none";
defparam \oledr[1]~I .oe_async_reset = "none";
defparam \oledr[1]~I .oe_power_up = "low";
defparam \oledr[1]~I .oe_register_mode = "none";
defparam \oledr[1]~I .oe_sync_reset = "none";
defparam \oledr[1]~I .operation_mode = "output";
defparam \oledr[1]~I .output_async_reset = "none";
defparam \oledr[1]~I .output_power_up = "low";
defparam \oledr[1]~I .output_register_mode = "none";
defparam \oledr[1]~I .output_sync_reset = "none";
// synopsys translate_on

// Location: PIN_G1,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 24mA
cycloneii_io \oledr[0]~I (
	.datain(\inst~regout ),
	.oe(vcc),
	.outclk(gnd),
	.outclkena(vcc),
	.inclk(gnd),
	.inclkena(vcc),
	.areset(gnd),
	.sreset(gnd),
	.differentialin(gnd),
	.linkin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.devoe(devoe),
	.combout(),
	.regout(),
	.differentialout(),
	.linkout(),
	.padio(oledr[0]));
// synopsys translate_off
defparam \oledr[0]~I .input_async_reset = "none";
defparam \oledr[0]~I .input_power_up = "low";
defparam \oledr[0]~I .input_register_mode = "none";
defparam \oledr[0]~I .input_sync_reset = "none";
defparam \oledr[0]~I .oe_async_reset = "none";
defparam \oledr[0]~I .oe_power_up = "low";
defparam \oledr[0]~I .oe_register_mode = "none";
defparam \oledr[0]~I .oe_sync_reset = "none";
defparam \oledr[0]~I .operation_mode = "output";
defparam \oledr[0]~I .output_async_reset = "none";
defparam \oledr[0]~I .output_power_up = "low";
defparam \oledr[0]~I .output_register_mode = "none";
defparam \oledr[0]~I .output_sync_reset = "none";
// synopsys translate_on

endmodule
